trigger: none
resources:
  - repo: self

variables:
  - template: vars/global.yml
  - template: vars/dev.yml

pool:
  name: Default

stages:
  # DOCKER BUILD
  - stage: DockerBuild
    displayName: Docker build
    jobs:
      - job: build
        displayName: Docker build
        continueOnError: false
        steps: 
          # Build image
          - task: Docker@2
            displayName: Build image
            inputs:
              command: build
              dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
              repository: $(imageName)
              tags: |
                $(imageTag)

          # Push to ECR
          - task: ECRPushImage@1
            displayName: Push into ECR
            inputs:
              awsCredentials: 'aws_rod_dev_connection'
              regionName: $(region)
              imageSource: 'imageName'
              sourceImageId: '$(imageName):$(imageTag)'
              repositoryName: '$(repoName)'
              pushTag: '$(imageTag)'
              forceDockerNamingConventions: true
          
  # # TERRAFORM DEPLOY
  # - stage: TerraformValidate
  #   displayName: Terraform validation
  #   jobs:
  #     - job: validate
  #       displayName: Validate terraform
  #       continueOnError: false
  #       steps:
  #         # Terraform install and init
  #         - template: steps/dev-terraform-install-init.yml

  #         # Terraform validate
  #         - task: TerraformCLI@2
  #           displayName: terraform validate
  #           inputs:
  #             command: "validate"
  #             workingDirectory: "infra/setup"
  #             allowTelemetryCollection: true

  # - stage: TerraformDeploy
  #   condition: succeeded('TerraformValidate')
  #   dependsOn: TerraformValidate
  #   jobs:
  #     - job: Deploy
  #       displayName: Deploy terraform
  #       steps:
  #         # Terraform install and init
  #         - template: steps/dev-terraform-install-init.yml

  #         # Terraform plan and apply
  #         - template: steps/dev-terraform-plan-apply.yml
          

