trigger:
  - main

resources:
  - repo: self

variables:
  - template: vars/global.yml
  - template: vars/dev.yml

pool:
    vmImage: "ubuntu-latest"

stages:
  - stage: TerraformValidate
    displayName: Terraform validation
    jobs:
      - job: validate
        displayName: Validate terraform
        continueOnError: false
        steps:
          # install terraform
          - task: TerraformInstaller@2
            displayName: Install Terraform
            inputs: 
              terraformVersion: 'latest'
          
          # Terraform init
          - task: TerraformCLI@2
            inputs:
              command: 'init'
              workingDirectory: 'infra/setup'
              backendType: 'aws'
              allowTelemetryCollection: true
              backendServiceAws: 'aws_rod_dev_connection'
              backendAwsRegion: $(variables.region)
              backendAwsBucket: $(variables.bucketState)
              backendAwsKey: $(variables.key)

          # Terraform validate
          - task: TerraformCLI@2
            inputs:
              command: 'validate'
              workingDirectory: '/infra/setup'
              allowTelemetryCollection: true
          
  - stage: TerraformDeploy
    condition: succeed('TerraformValidate')
    dependsOn: TerraformValidate
    jobs:
      - job:
        displayName: Deploy terraform
        steps:
          # install terraform
          - task: TerraformInstaller@2
            displayName: Install Terraform
            inputs: 
              terraformVersion: 'latest'
          
          # Terraform init
          - task: TerraformCLI@2
            inputs:
              command: 'init'
              workingDirectory: 'infra/setup'
              backendType: 'aws'
              allowTelemetryCollection: true
              backendServiceAws: 'aws_rod_dev_connection'
              backendAwsRegion: $(variables.region)
              backendAwsBucket: $(variables.bucketState)
              backendAwsKey: $(variables.key)

          # Terraform plan
          - task: TerraformCLI@2
            inputs:
              command: 'plan'
              workingDirectory: '/infra/setup'
              commandOptions: '-out tf-paln'
              allowTelemetryCollection: true
              providerServiceAws: 'aws_rod_dev_connection'
              providerAwsRegion: $(variables.region)

          # Terraform apply
          - task: TerraformCLI@2
            inputs:
              command: 'apply'
              workingDirectory: '/infra/setup'
              commandOptions: '"tf-plan"'
              allowTelemetryCollection: true
              providerServiceAws: 'aws_rod_dev_connection'
              providerAwsRegion: $(variables.region)
          # Terraform done
          - script: echo "Infrastructure deployment completed."
            displayName: 'Done'
          
